# IntelliFlow User Service - Development Environment Configuration

spring:
  profiles:
    active: development

  # Database Configuration
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:user_db}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    hikari:
      maximum-pool-size: 5
      minimum-idle: 2
      idle-timeout: 300000
      connection-timeout: 20000
      
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        
  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:redis123}
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-wait: -1ms
        max-idle: 8
        min-idle: 0
        
  # Kafka Configuration
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: 1
      retries: 3
    consumer:
      group-id: user-service-dev
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.intelliflow.shared.dto

# Server Configuration
server:
  port: 8081
  servlet:
    context-path: /api/v1
  tomcat:
    max-threads: 50
    min-spare-threads: 5

# Management/Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,configprops,loggers
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# Service Discovery
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://localhost:8761/eureka}
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    hostname: localhost

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:mySecretKeyForJWTTokenGeneration123456789}
  expiration: ${JWT_EXPIRATION:86400000}
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}

# CORS Configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080,http://localhost:4200}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS,HEAD
  allowed-headers: "*"
  exposed-headers: "Authorization,Content-Type,X-Total-Count"
  allow-credentials: true

# Logging Configuration
logging:
  level:
    com.intelliflow: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.apache.kafka: INFO
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/user-service-dev.log
    max-size: 100MB
    max-history: 30

# Custom Application Configuration
app:
  name: "IntelliFlow User Service"
  version: "1.0.0"
  environment: "development"
  
  # Rate Limiting
  rate-limit:
    enabled: false  # Disabled for development
    requests-per-minute: 1000
    
  # Email Configuration
  email:
    enabled: true
    smtp:
      host: ${MAIL_HOST:smtp.gmail.com}
      port: ${MAIL_PORT:587}
      username: ${MAIL_USERNAME:}
      password: ${MAIL_PASSWORD:}
      auth: true
      starttls: true
    from: ${NOTIFICATION_EMAIL_FROM:noreply@intelliflow.com}
    
  # Password Policy
  password-policy:
    min-length: 6  # Relaxed for development
    require-uppercase: false
    require-lowercase: false
    require-numbers: false
    require-special-chars: false
    
  # Session Configuration
  session:
    timeout-minutes: 60
    max-concurrent-sessions: 5
    
  # Development-specific features
  debug:
    enabled: true
    api-logging: true
    db-logging: true
    cache-logging: true
    
  # Mock services for development
  mock:
    enabled: true
    notification-service: true
    fraud-detection-service: false

# Circuit Breaker Configuration
resilience4j:
  circuitbreaker:
    instances:
      notification-service:
        register-health-indicator: true
        failure-rate-threshold: 80  # Higher threshold for dev
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 10s
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        sliding-window-type: COUNT_BASED
        
# Retry Configuration
  retry:
    instances:
      database:
        max-attempts: 3
        wait-duration: 1s
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2

# Cache Configuration
cache:
  redis:
    ttl:
      user-profile: 300  # 5 minutes
      user-sessions: 1800  # 30 minutes
      permissions: 3600  # 1 hour
    prefix: "dev:user-service:"

# Development Tools
spring:
  devtools:
    restart:
      enabled: true
    livereload:
      enabled: true
  h2:
    console:
      enabled: false  # Using PostgreSQL in development