spring:
  application:
    name: api-gateway
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOriginPatterns: "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders: "*"
            allowCredentials: true
            maxAge: 3600
      
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
      
      httpclient:
        connect-timeout: 10000
        response-timeout: 30s
        pool:
          type: elastic
          max-idle-time: 15s
          max-life-time: 60s
        ssl:
          use-insecure-trust-manager: false
  
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 8
          min-idle: 2
  
  security:
    jwt:
      secret: ${JWT_SECRET:mySecretKey}

server:
  port: ${SERVER_PORT:8080}

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://localhost:8761/eureka}
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,gateway
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.intelliflow: ${LOG_LEVEL:INFO}
    org.springframework.cloud.gateway: INFO
    reactor.netty: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%X{correlationId:-}] [%thread] %-5level %logger{36} - %msg%n"

# Resilience4j Circuit Breaker Configuration
resilience4j:
  circuitbreaker:
    instances:
      user-service-cb:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 30s
        permittedNumberOfCallsInHalfOpenState: 3
        slowCallRateThreshold: 50
        slowCallDurationThreshold: 2s
      
      transaction-service-cb:
        slidingWindowSize: 8
        minimumNumberOfCalls: 4
        failureRateThreshold: 60
        waitDurationInOpenState: 45s
        permittedNumberOfCallsInHalfOpenState: 2
        slowCallRateThreshold: 60
        slowCallDurationThreshold: 3s
      
      fraud-detection-service-cb:
        slidingWindowSize: 6
        minimumNumberOfCalls: 3
        failureRateThreshold: 70
        waitDurationInOpenState: 60s
        permittedNumberOfCallsInHalfOpenState: 2
        slowCallRateThreshold: 70
        slowCallDurationThreshold: 5s
      
      analytics-service-cb:
        slidingWindowSize: 8
        minimumNumberOfCalls: 4
        failureRateThreshold: 50
        waitDurationInOpenState: 30s
        permittedNumberOfCallsInHalfOpenState: 3
        slowCallRateThreshold: 50
        slowCallDurationThreshold: 10s
      
      notification-service-cb:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 40
        waitDurationInOpenState: 20s
        permittedNumberOfCallsInHalfOpenState: 3
        slowCallRateThreshold: 40
        slowCallDurationThreshold: 3s
  
  timelimiter:
    instances:
      default:
        timeoutDuration: 10s
      user-service-cb:
        timeoutDuration: 5s
      transaction-service-cb:
        timeoutDuration: 10s
      fraud-detection-service-cb:
        timeoutDuration: 15s
      analytics-service-cb:
        timeoutDuration: 30s
      notification-service-cb:
        timeoutDuration: 8s

---
spring:
  config:
    activate:
      on-profile: dev
  data:
    redis:
      host: localhost
      port: 6379

logging:
  level:
    root: INFO
    com.intelliflow: DEBUG
    org.springframework.cloud.gateway: DEBUG

---
spring:
  config:
    activate:
      on-profile: prod
  data:
    redis:
      host: ${ELASTICACHE_ENDPOINT}
      port: 6379
  cloud:
    gateway:
      httpclient:
        ssl:
          use-insecure-trust-manager: false

logging:
  level:
    root: WARN
    com.intelliflow: INFO
