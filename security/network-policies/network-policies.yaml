# Default deny all ingress traffic
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-ingress
  namespace: intelliflow-prod
  labels:
    component: network-security
spec:
  podSelector: {}
  policyTypes:
  - Ingress
---
# Default deny all egress traffic (with exceptions)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-egress
  namespace: intelliflow-prod
  labels:
    component: network-security
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  # Allow DNS
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow Kubernetes API
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 6443
  # Allow NTP
  - to: []
    ports:
    - protocol: UDP
      port: 123
---
# User Service Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: user-service-netpol
  namespace: intelliflow-prod
  labels:
    app: user-service
    component: network-security
spec:
  podSelector:
    matchLabels:
      app: user-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow from API Gateway
  - from:
    - podSelector:
        matchLabels:
          app: api-gateway
    ports:
    - protocol: TCP
      port: 8080
  # Allow from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: intelliflow-monitoring
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8081
  # Allow health checks from load balancer
  - from: []
    ports:
    - protocol: TCP
      port: 8080
  egress:
  # Allow to PostgreSQL
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  # Allow to Redis
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow to Kafka
  - to:
    - podSelector:
        matchLabels:
          app: kafka
    ports:
    - protocol: TCP
      port: 9092
  # Allow to Eureka
  - to:
    - podSelector:
        matchLabels:
          app: eureka
    ports:
    - protocol: TCP
      port: 8761
  # Allow external SMTP
  - to: []
    ports:
    - protocol: TCP
      port: 587
    - protocol: TCP
      port: 465
    - protocol: TCP
      port: 25
---
# Transaction Service Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: transaction-service-netpol
  namespace: intelliflow-prod
  labels:
    app: transaction-service
    component: network-security
spec:
  podSelector:
    matchLabels:
      app: transaction-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow from API Gateway
  - from:
    - podSelector:
        matchLabels:
          app: api-gateway
    ports:
    - protocol: TCP
      port: 8080
  # Allow from Fraud Detection Service
  - from:
    - podSelector:
        matchLabels:
          app: fraud-detection-service
    ports:
    - protocol: TCP
      port: 8080
  # Allow from Analytics Service
  - from:
    - podSelector:
        matchLabels:
          app: analytics-service
    ports:
    - protocol: TCP
      port: 8080
  # Allow from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: intelliflow-monitoring
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8081
  egress:
  # Allow to PostgreSQL
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  # Allow to Redis
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow to Kafka
  - to:
    - podSelector:
        matchLabels:
          app: kafka
    ports:
    - protocol: TCP
      port: 9092
  # Allow to User Service
  - to:
    - podSelector:
        matchLabels:
          app: user-service
    ports:
    - protocol: TCP
      port: 8080
  # Allow to Fraud Detection Service
  - to:
    - podSelector:
        matchLabels:
          app: fraud-detection-service
    ports:
    - protocol: TCP
      port: 8000
  # Allow to Eureka
  - to:
    - podSelector:
        matchLabels:
          app: eureka
    ports:
    - protocol: TCP
      port: 8761
  # Allow external payment gateways
  - to: []
    ports:
    - protocol: TCP
      port: 443
---
# Fraud Detection Service Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: fraud-detection-netpol
  namespace: intelliflow-prod
  labels:
    app: fraud-detection-service
    component: network-security
spec:
  podSelector:
    matchLabels:
      app: fraud-detection-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow from API Gateway
  - from:
    - podSelector:
        matchLabels:
          app: api-gateway
    ports:
    - protocol: TCP
      port: 8000
  # Allow from Transaction Service
  - from:
    - podSelector:
        matchLabels:
          app: transaction-service
    ports:
    - protocol: TCP
      port: 8000
  # Allow from AI Orchestrator
  - from:
    - podSelector:
        matchLabels:
          app: ai-orchestrator
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 9000
  # Allow from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: intelliflow-monitoring
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 8001
  egress:
  # Allow to PostgreSQL
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  # Allow to Redis
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow to MLflow
  - to:
    - podSelector:
        matchLabels:
          app: mlflow
    ports:
    - protocol: TCP
      port: 5000
  # Allow to AI Orchestrator
  - to:
    - podSelector:
        matchLabels:
          app: ai-orchestrator
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8081
  # Allow external ML model repositories
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow S3 access for model artifacts
  - to: []
    ports:
    - protocol: TCP
      port: 443
---
# Analytics Service Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: analytics-service-netpol
  namespace: intelliflow-prod
  labels:
    app: analytics-service
    component: network-security
spec:
  podSelector:
    matchLabels:
      app: analytics-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow from API Gateway
  - from:
    - podSelector:
        matchLabels:
          app: api-gateway
    ports:
    - protocol: TCP
      port: 8080
  # Allow from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: intelliflow-monitoring
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8081
  egress:
  # Allow to PostgreSQL
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  # Allow to MongoDB
  - to:
    - podSelector:
        matchLabels:
          app: mongodb
    ports:
    - protocol: TCP
      port: 27017
  # Allow to Redis
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow to Transaction Service
  - to:
    - podSelector:
        matchLabels:
          app: transaction-service
    ports:
    - protocol: TCP
      port: 8080
  # Allow to User Service
  - to:
    - podSelector:
        matchLabels:
          app: user-service
    ports:
    - protocol: TCP
      port: 8080
  # Allow to Eureka
  - to:
    - podSelector:
        matchLabels:
          app: eureka
    ports:
    - protocol: TCP
      port: 8761
---
# API Gateway Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: api-gateway-netpol
  namespace: intelliflow-prod
  labels:
    app: api-gateway
    component: network-security
spec:
  podSelector:
    matchLabels:
      app: api-gateway
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow from anywhere (public access)
  - {}
  egress:
  # Allow to all microservices
  - to:
    - podSelector:
        matchLabels:
          component: microservice
    ports:
    - protocol: TCP
      port: 8080
  # Allow to ML services
  - to:
    - podSelector:
        matchLabels:
          component: ml-service
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 8080
  # Allow to Redis
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow to Eureka
  - to:
    - podSelector:
        matchLabels:
          app: eureka
    ports:
    - protocol: TCP
      port: 8761
---
# AI Orchestrator Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ai-orchestrator-netpol
  namespace: intelliflow-prod
  labels:
    app: ai-orchestrator
    component: network-security
spec:
  podSelector:
    matchLabels:
      app: ai-orchestrator
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow from API Gateway
  - from:
    - podSelector:
        matchLabels:
          app: api-gateway
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8081
  # Allow from Fraud Detection Service
  - from:
    - podSelector:
        matchLabels:
          app: fraud-detection-service
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8081
  # Allow from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: intelliflow-monitoring
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8081
  egress:
  # Allow to PostgreSQL
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  # Allow to Redis
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow to MLflow
  - to:
    - podSelector:
        matchLabels:
          app: mlflow
    ports:
    - protocol: TCP
      port: 5000
  # Allow to Fraud Detection Service
  - to:
    - podSelector:
        matchLabels:
          app: fraud-detection-service
    ports:
    - protocol: TCP
      port: 8000
  # Allow external ML services
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow S3 access
  - to: []
    ports:
    - protocol: TCP
      port: 443
---
# Database Network Policies
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: postgres-netpol
  namespace: intelliflow-prod
  labels:
    app: postgres
    component: network-security
spec:
  podSelector:
    matchLabels:
      app: postgres
  policyTypes:
  - Ingress
  ingress:
  # Allow from microservices
  - from:
    - podSelector:
        matchLabels:
          component: microservice
    ports:
    - protocol: TCP
      port: 5432
  # Allow from ML services
  - from:
    - podSelector:
        matchLabels:
          component: ml-service
    ports:
    - protocol: TCP
      port: 5432
  # Allow from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: intelliflow-monitoring
    ports:
    - protocol: TCP
      port: 5432
  # Allow from backup jobs
  - from:
    - podSelector:
        matchLabels:
          app: postgres-backup
    ports:
    - protocol: TCP
      port: 5432
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: redis-netpol
  namespace: intelliflow-prod
  labels:
    app: redis
    component: network-security
spec:
  podSelector:
    matchLabels:
      app: redis
  policyTypes:
  - Ingress
  ingress:
  # Allow from microservices
  - from:
    - podSelector:
        matchLabels:
          component: microservice
    ports:
    - protocol: TCP
      port: 6379
  # Allow from ML services
  - from:
    - podSelector:
        matchLabels:
          component: ml-service
    ports:
    - protocol: TCP
      port: 6379
  # Allow from API Gateway
  - from:
    - podSelector:
        matchLabels:
          app: api-gateway
    ports:
    - protocol: TCP
      port: 6379
  # Allow from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: intelliflow-monitoring
    ports:
    - protocol: TCP
      port: 6379
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: kafka-netpol
  namespace: intelliflow-prod
  labels:
    app: kafka
    component: network-security
spec:
  podSelector:
    matchLabels:
      app: kafka
  policyTypes:
  - Ingress
  ingress:
  # Allow from microservices
  - from:
    - podSelector:
        matchLabels:
          component: microservice
    ports:
    - protocol: TCP
      port: 9092
  # Allow from ML services
  - from:
    - podSelector:
        matchLabels:
          component: ml-service
    ports:
    - protocol: TCP
      port: 9092
  # Allow from monitoring/logging
  - from:
    - namespaceSelector:
        matchLabels:
          name: intelliflow-monitoring
    ports:
    - protocol: TCP
      port: 9092
    - protocol: TCP
      port: 9093
---
# Monitoring namespace policies
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: monitoring-access
  namespace: intelliflow-monitoring
  labels:
    component: network-security
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow from production namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: intelliflow-prod
  # Allow from staging namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: intelliflow-staging
  # Allow external access to dashboards
  - from: []
    ports:
    - protocol: TCP
      port: 3000  # Grafana
    - protocol: TCP
      port: 9090  # Prometheus
    - protocol: TCP
      port: 5601  # Kibana
  egress:
  # Allow to production namespace
  - to:
    - namespaceSelector:
        matchLabels:
          name: intelliflow-prod
  # Allow to staging namespace
  - to:
    - namespaceSelector:
        matchLabels:
          name: intelliflow-staging
  # Allow external alert webhooks
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 587
---
# Istio Service Mesh Security (if using Istio)
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: default
  namespace: intelliflow-prod
spec:
  mtls:
    mode: STRICT
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: api-gateway-authz
  namespace: intelliflow-prod
spec:
  selector:
    matchLabels:
      app: api-gateway
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/intelliflow-prod/sa/api-gateway"]
  - to:
    - operation:
        methods: ["GET", "POST", "PUT", "DELETE"]
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: fraud-detection-authz
  namespace: intelliflow-prod
spec:
  selector:
    matchLabels:
      app: fraud-detection-service
  rules:
  - from:
    - source:
        principals: 
        - "cluster.local/ns/intelliflow-prod/sa/api-gateway"
        - "cluster.local/ns/intelliflow-prod/sa/transaction-service"
        - "cluster.local/ns/intelliflow-prod/sa/ai-orchestrator"
  - to:
    - operation:
        methods: ["GET", "POST"]
        paths: ["/predict", "/predict/batch", "/health", "/metrics"]
